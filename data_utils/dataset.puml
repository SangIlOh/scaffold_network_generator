@startuml

skinparam dpi 300
skinparam monochrome true
skinparam svgLinkTarget _parent
'scale 3000*2000

'目前的sampler为单进程，因为stranformer是外部的，sampler的角色虽然繁琐但是计算量不大，对于当前不超过256的batch_size而言抽样的速度不会影响训练
'正在考虑是否把transform部分直接写进
'loader，这部分需要并行，

abstract class Object

'直接读取数据
Object <|-- Dataset

'对Dataset进行抽样
Object <|-- Sampler

'数据格式转换与运算
Object <|-- Transformer

'实现以block进行索引
Object <|-- Block

'以排除block进行索引
Object <|-- ExcludeBlock



Dataset <|-- SQLDataset
Dataset <|-- ProtoDataset

Sampler <|-- SQLSampler
Sampler <|-- ProtoSampler

Transformer <|-- DFTransformer

class Object{
Parent class of all other classes
--field--
(buitin)
--method--
(builtin)
}



class Block{
A subclass of int
Performs the id of a block of samples
--filed--
-num
--method--
-__init__(block_id)
-__repr__()
'可以通过访问对象本身来访问类似int值
}

class ExcludeBlock{
--filed--
-block_id
- i
-ls_all
--method--
-__init__(block_id, num_block=5)
-__repr__()
'访问对象本身得到迭代器
-__iter__()
-__next__()
'可为generator
}

abstract class Dataset{
The whole data will be exposed to it
--filed--

--method--
#__init__()
#__getitem__(*input)
'定义接口，形式不固定
}

class SQLDataset{
A mysql Dataset class
--field--
-db
-scaffold_table
-mol_table
-map_table
-num_mol
-num_scaffold
-num_map
-sc_fold 'dict {block_id:[mol,mol]} 直接初始时运行好，只花一次时间
-mol_fold 'dict {block_id:[mol, mol]}
-num_fold=5 '预置fold数
--method--
-__init__(mysql_param, scaffold_table, mol_table, map_table)
+ls_to_str(list) '把传入的列表转为'(int,int...)'的字符串形式
-__getitem__(scaffold_id, mol_id) '对应5*5=25种索引方式

'对25种索引方式，以如下方法进行索引
-_get_item_block_block(scaffold_id, mol_id)
-_get_item_block_int(scaffold_id, mol_id)
-_get_item_block_list(scaffold_id, mol_id)
-_get_item_list_block(scaffold_id, mol_id)
-_get_item_list_list(scaffold_id, mol_id)
-_get_item_list_int(scaffold_id, mol_id)
-_get_item_int_block(scaffold_id, mol_id)
-_get_item_int_list(scaffold_id, mol_id)
-_get_item_int_int(scaffold_id, mol_id)
-_getitem_exblock_exblock(saffold_id, mol_id)
-_getitem_exblock_block(scaffold_id, mol_id)
-_getitem_exblock_list(scaffold_id, mol_id)
-_getitem_exblock_int(scaffold_id, mol_id)
-_getitem_list_exblock(scaffold_id, mol_id)
-_getitem_int_exblock(scaffold_id, mol_id)
-_getitem_block_exblock(scaffold_id, mol_id)
-_getitem_scaffold_int(scaffold_id)
-_getitem_scaffold_list(scaffold_id)
-_getitem_scaffold_block(scaffold_id)
-_getitem_scaffold_exblock(scaffold_id)
-_getitem_mol_int(mol_id)
-_getitem_mol_list(mol_id)
-_getitem_mol_block(mol_id)
-_getitem_mol_exblock(mol_id)
-_getitem_all()

}

class ProtoDataset{
A protocol buffer Dataset class
--filed--
-scaffolds_proto_file
-idx_sm_proto_file
--method--
-__getitem__(scaffold_id, mol_id)
}


abstract class Sampler{
A generator of mini-batch
--field--
#dataset
#mode
#batch_size
--method--
#__init__(dataset, batch_size, mini_batch_size)
+__next__()
+sample_by_idx(scaffold_id, mol_id, batch_size)
}

class SQLSampler{
--filed--
-dataset '传入dataset对象
-mode '有3种模式，training, test, evaluation，字符串识别
-batch_size
-num_mol '将self.dataset.num_mol传入，改了代码后好像用不到了
-num_scaffold '将self.dataset.num_scaffold传入，改了代码后好像用不到了
-block_id  '针对的fold，每次实例化一个新的sampler
-ex
-ids_sc_in
-ids_sc_ex
-ids_mol_in
-idx_mol_ex
-minibatch_size
--method--
-__init__(dataset, block_id, mode, batch_size)
+__next__()
+sample_by_idx(scaffold_id, mol_id, batch_size)
}

class ProtoSampler{
--filed--
-dataset
-mode
-batch_size
-minibatch_size
--method--
-__init__(dataset, minibatch_size, batch_size=0)
+__next__()
+sample_by_idx(scaffold_id, mol_id, batch_size)
}



abstract class Transformer{
--field--
#data
--method--
#mol_to_array(smiles)
#batch_to_array(smiles_list)
}

class DFTransformer{
--field--
#data
-col_sc_smiles
-col_mol_smiles
-col_ls_atom
-col_ls_np
-col_ls_nh
--method--
-__init__(data,
          col_sc_smiles,
          col_mol_smiles,
          col_ls_atom,
          col_ls_np,
          col_ls_nh)
+mol_to_array(smiles)
+mol_list_to_array(smiles_list)
+str_to_ls('[]')
}



@enduml